@tailwind base;
@tailwind components;
@tailwind utilities;

/* CYBERPUNK THEME - DARK ONLY */
:root {
  --button-outline: rgba(243, 186, 47, .25);
  --badge-outline: rgba(243, 186, 47, .15);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: 15; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(243, 186, 47, .08);
  --elevate-2: rgba(243, 186, 47, .15);

  /* Dark Pool - Ultra Dark Black + Purple Theme */
  --background: 0 0% 0%;

  --foreground: 270 50% 85%;

  --border: 270 50% 25%;

  --card: 0 0% 5%;

  --card-foreground: 270 30% 80%;

  --card-border: 270 40% 20%;

  --sidebar: 0 0% 3%;

  --sidebar-foreground: 270 25% 75%;

  --sidebar-border: 270 35% 15%;

  --sidebar-primary: 270 70% 60%;

  --sidebar-primary-foreground: 0 0% 95%;

  --sidebar-accent: 270 40% 15%;

  --sidebar-accent-foreground: 270 70% 80%;

  --sidebar-ring: 270 70% 60%;

  --popover: 0 0% 4%;

  --popover-foreground: 270 30% 70%;

  --popover-border: 270 40% 18%;

  --primary: 270 70% 60%;

  --primary-foreground: 0 0% 95%;

  --secondary: 0 0% 8%;

  --secondary-foreground: 270 25% 65%;

  --muted: 0 0% 6%;

  --muted-foreground: 270 20% 55%;

  --accent: 270 60% 20%;

  --accent-foreground: 270 70% 80%;

  --destructive: 0 100% 60%;

  --destructive-foreground: 0 20% 95%;

  --success: 150 100% 50%;

  --success-foreground: 150 20% 5%;

  --warning: 270 70% 60%;

  --warning-foreground: 0 0% 95%;

  --input: 225 40% 15%;
  --ring: 270 70% 60%;
  --chart-1: 270 70% 60%;
  --chart-2: 150 100% 50%;
  --chart-3: 48 95% 53%;
  --chart-4: 280 100% 60%;
  --chart-5: 25 100% 50%;

  --font-sans: 'Roboto Mono', monospace;
  --font-serif: 'Roboto Mono', monospace;
  --font-mono: 'Roboto Mono', monospace;
  --font-cyber: 'Orbitron', 'Share Tech Mono', monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(220 15% 25% / 0.05);
  --shadow-xs: 0px 2px 0px 0px hsl(220 15% 25% / 0.08);
  --shadow-sm: 0px 2px 0px 0px hsl(220 15% 25% / 0.12), 0px 1px 2px -1px hsl(220 15% 25% / 0.08);
  --shadow: 0px 2px 0px 0px hsl(220 15% 25% / 0.15), 0px 1px 2px -1px hsl(220 15% 25% / 0.10);
  --shadow-md: 0px 2px 0px 0px hsl(220 15% 25% / 0.18), 0px 2px 4px -1px hsl(220 15% 25% / 0.12);
  --shadow-lg: 0px 2px 0px 0px hsl(220 15% 25% / 0.22), 0px 4px 6px -1px hsl(220 15% 25% / 0.15);
  --shadow-xl: 0px 2px 0px 0px hsl(220 15% 25% / 0.25), 0px 8px 10px -1px hsl(220 15% 25% / 0.18);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 15% 25% / 0.30);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(139, 92, 246, .25);
  --badge-outline: rgba(139, 92, 246, .15);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(139, 92, 246, .08);
  --elevate-2: rgba(139, 92, 246, .15);

  --sidebar-ring: 270 70% 60%;

  --input: 225 18% 22%;
  --ring: 270 70% 60%;
  --chart-1: 270 70% 60%;
  --chart-2: 150 85% 60%;
  --chart-3: 48 95% 65%;
  --chart-4: 280 85% 62%;
  --chart-5: 25 90% 65%;

  --shadow-2xs: 0px 2px 0px 0px hsl(225 25% 5% / 0.20);
  --shadow-xs: 0px 2px 0px 0px hsl(225 25% 5% / 0.25);
  --shadow-sm: 0px 2px 0px 0px hsl(225 25% 5% / 0.30), 0px 1px 2px -1px hsl(225 25% 5% / 0.20);
  --shadow: 0px 2px 0px 0px hsl(225 25% 5% / 0.35), 0px 1px 2px -1px hsl(225 25% 5% / 0.25);
  --shadow-md: 0px 2px 0px 0px hsl(225 25% 5% / 0.40), 0px 2px 4px -1px hsl(225 25% 5% / 0.30);
  --shadow-lg: 0px 2px 0px 0px hsl(225 25% 5% / 0.45), 0px 4px 6px -1px hsl(225 25% 5% / 0.35);
  --shadow-xl: 0px 2px 0px 0px hsl(225 25% 5% / 0.50), 0px 8px 10px -1px hsl(225 25% 5% / 0.40);
  --shadow-2xl: 0px 2px 0px 0px hsl(225 25% 5% / 0.55);

}

/* Cyberpunk Special Effects */
.cyber-glow {
  text-shadow: 0 0 10px hsl(var(--primary)), 0 0 20px hsl(var(--primary)), 0 0 40px hsl(var(--primary));
}

.cyber-glow-success {
  text-shadow: 0 0 10px hsl(var(--cyber-success)), 0 0 20px hsl(var(--cyber-success)), 0 0 40px hsl(var(--cyber-success));
}

.cyber-glow-danger {
  text-shadow: 0 0 10px hsl(var(--cyber-danger)), 0 0 20px hsl(var(--cyber-danger)), 0 0 40px hsl(var(--cyber-danger));
}

/* Removed cyber-glow-gold - replaced with purple theme */

.cyber-glow-purple {
  text-shadow: 0 0 15px #8b5cf6, 0 0 30px #a855f7, 0 0 60px #c084fc;
}

.cyber-glow-primary {
  text-shadow: 0 0 15px hsl(var(--primary)), 0 0 30px hsl(var(--primary)), 0 0 60px hsl(var(--primary));
}

.cyber-border {
  border: 1px solid hsl(var(--primary) / 0.3);
  box-shadow: 0 0 10px hsl(var(--primary) / 0.2), inset 0 0 10px hsl(var(--primary) / 0.1);
}

.cyber-button {
  background: linear-gradient(45deg, hsl(var(--primary) / 0.1), hsl(var(--primary) / 0.3));
  border: 1px solid hsl(var(--primary) / 0.5);
  box-shadow: 0 0 15px hsl(var(--primary) / 0.3);
  transition: all 0.3s ease;
}

.cyber-button:hover {
  background: linear-gradient(45deg, hsl(var(--primary) / 0.2), hsl(var(--primary) / 0.4));
  box-shadow: 0 0 25px hsl(var(--primary) / 0.5);
}

.scanlines {
  position: relative;
  overflow: hidden;
}

.scanlines::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(transparent 50%, hsl(var(--primary) / 0.03) 50%);
  background-size: 100% 4px;
  animation: scan 2s linear infinite;
  pointer-events: none;
  z-index: 1000;
}

@keyframes scan {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(100vh); }
}

.glitch {
  animation: glitch 0.5s;
}

@keyframes glitch {
  0%, 100% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-2px, -2px); }
  60% { transform: translate(2px, 2px); }
  80% { transform: translate(2px, -2px); }
}

.pulse-glow {
  animation: pulse-glow 2s ease-in-out infinite alternate;
}

@keyframes pulse-glow {
  from { 
    box-shadow: 0 0 5px hsl(var(--primary) / 0.3), 0 0 10px hsl(var(--primary) / 0.2), 0 0 15px hsl(var(--primary) / 0.1);
  }
  to { 
    box-shadow: 0 0 10px hsl(var(--primary) / 0.5), 0 0 20px hsl(var(--primary) / 0.3), 0 0 30px hsl(var(--primary) / 0.2);
  }
}

.typewriter {
  overflow: hidden;
  border-right: 2px solid hsl(var(--primary));
  white-space: nowrap;
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink-caret {
  from, to { border-color: transparent; }
  50% { border-color: hsl(var(--primary)); }
}

.cyber-scrollbar::-webkit-scrollbar {
  width: 8px;
}

.cyber-scrollbar::-webkit-scrollbar-track {
  background: hsl(var(--background));
}

.cyber-scrollbar::-webkit-scrollbar-thumb {
  background: hsl(var(--primary) / 0.5);
  border-radius: 4px;
  box-shadow: 0 0 5px hsl(var(--primary) / 0.3);
}

.cyber-scrollbar::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--primary) / 0.7);
}

.matrix-rain {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
  opacity: 0.1;
}

.particle-effect {
  position: absolute;
  width: 2px;
  height: 2px;
  background: hsl(var(--primary));
  border-radius: 50%;
  box-shadow: 0 0 5px hsl(var(--primary));
  animation: particle-float 3s ease-in-out infinite;
}

@keyframes particle-float {
  0%, 100% { transform: translateY(0) rotate(0deg); opacity: 0; }
  50% { transform: translateY(-20px) rotate(180deg); opacity: 1; }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}